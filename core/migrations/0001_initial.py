# Generated by Django 4.2.7 on 2025-10-23 12:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("account_name", models.CharField(max_length=100)),
                ("project_name", models.CharField(max_length=100)),
                ("needs_review", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "accounts",
            },
        ),
        migrations.CreateModel(
            name="UploadHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("batch_id", models.UUIDField(db_index=True, unique=True)),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("PO", "Purchase Order"),
                            ("ACCEPTANCE", "Acceptance"),
                        ],
                        max_length=50,
                    ),
                ),
                ("original_filename", models.CharField(max_length=500)),
                ("file_size", models.BigIntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=50,
                    ),
                ),
                ("total_rows", models.IntegerField(default=0)),
                ("valid_rows", models.IntegerField(default=0)),
                ("invalid_rows", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("processing_duration", models.IntegerField(blank=True, null=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "upload_history",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("batch_id", models.UUIDField(db_index=True)),
                ("po_number", models.CharField(db_index=True, max_length=100)),
                ("po_line_no", models.CharField(max_length=50)),
                (
                    "project_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "project_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("site_name", models.CharField(blank=True, max_length=255, null=True)),
                ("site_code", models.CharField(blank=True, max_length=100, null=True)),
                ("item_code", models.CharField(blank=True, max_length=100, null=True)),
                ("item_description", models.TextField(blank=True, null=True)),
                ("item_description_local", models.TextField(blank=True, null=True)),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                ("requested_qty", models.IntegerField(blank=True, null=True)),
                ("due_qty", models.IntegerField(blank=True, null=True)),
                ("billed_qty", models.IntegerField(blank=True, null=True)),
                ("quantity_cancel", models.IntegerField(blank=True, null=True)),
                (
                    "line_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=50, null=True)),
                ("currency", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "tax_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("po_status", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "payment_terms",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "payment_method",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("customer", models.CharField(blank=True, max_length=255, null=True)),
                ("rep_office", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "subcontract_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("pr_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "sales_contract_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("version_no", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "shipment_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "engineering_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "engineering_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "subproject_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "center_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "product_category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "bidding_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("bill_to", models.TextField(blank=True, null=True)),
                ("ship_to", models.TextField(blank=True, null=True)),
                ("note_to_receiver", models.TextField(blank=True, null=True)),
                ("ff_buyer", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fob_lookup_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("publish_date", models.DateField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("expire_date", models.DateField(blank=True, null=True)),
                ("acceptance_date", models.DateField(blank=True, null=True)),
                ("acceptance_date_1", models.DateField(blank=True, null=True)),
                ("change_history", models.TextField(blank=True, null=True)),
                ("pr_po_automation", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "purchase_orders",
                "indexes": [
                    models.Index(fields=["batch_id"], name="idx_po_batch"),
                    models.Index(
                        fields=["po_number", "po_line_no"], name="idx_po_lookup"
                    ),
                ],
                "unique_together": {("po_number", "po_line_no", "batch_id")},
            },
        ),
        migrations.CreateModel(
            name="POStaging",
            fields=[
                ("staging_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("batch_id", models.UUIDField(db_index=True)),
                ("row_number", models.IntegerField(blank=True, null=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("is_valid", models.BooleanField(default=True)),
                ("validation_errors", models.JSONField(blank=True, null=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("po_number", models.CharField(max_length=100)),
                ("po_line_no", models.CharField(max_length=50)),
                (
                    "project_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "project_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("site_name", models.CharField(blank=True, max_length=255, null=True)),
                ("site_code", models.CharField(blank=True, max_length=100, null=True)),
                ("item_code", models.CharField(blank=True, max_length=100, null=True)),
                ("item_description", models.TextField(blank=True, null=True)),
                ("item_description_local", models.TextField(blank=True, null=True)),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                ("requested_qty", models.IntegerField(blank=True, null=True)),
                ("due_qty", models.IntegerField(blank=True, null=True)),
                ("billed_qty", models.IntegerField(blank=True, null=True)),
                ("quantity_cancel", models.IntegerField(blank=True, null=True)),
                (
                    "line_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=50, null=True)),
                ("currency", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "tax_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("po_status", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "payment_terms",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "payment_method",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("customer", models.CharField(blank=True, max_length=255, null=True)),
                ("rep_office", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "subcontract_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("pr_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "sales_contract_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("version_no", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "shipment_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "engineering_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "engineering_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "subproject_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "center_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "product_category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "bidding_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("bill_to", models.TextField(blank=True, null=True)),
                ("ship_to", models.TextField(blank=True, null=True)),
                ("note_to_receiver", models.TextField(blank=True, null=True)),
                ("ff_buyer", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fob_lookup_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("publish_date", models.DateField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("expire_date", models.DateField(blank=True, null=True)),
                ("acceptance_date", models.DateField(blank=True, null=True)),
                ("acceptance_date_1", models.DateField(blank=True, null=True)),
                ("change_history", models.TextField(blank=True, null=True)),
                ("pr_po_automation", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "po_staging",
                "indexes": [
                    models.Index(fields=["batch_id"], name="idx_po_staging_batch"),
                    models.Index(
                        fields=["po_number", "po_line_no"], name="idx_po_staging_lookup"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="MergeHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("batch_id", models.UUIDField(db_index=True, unique=True)),
                ("total_records", models.IntegerField(default=0)),
                ("po_records_count", models.IntegerField(blank=True, null=True)),
                (
                    "acceptance_records_count",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="COMPLETED",
                        max_length=50,
                    ),
                ),
                ("error_message", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("merged_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "acceptance_file",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acceptance_merges",
                        to="core.uploadhistory",
                    ),
                ),
                (
                    "merged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "po_file",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="po_merges",
                        to="core.uploadhistory",
                    ),
                ),
            ],
            options={
                "db_table": "merge_history",
                "ordering": ["-merged_at"],
            },
        ),
        migrations.CreateModel(
            name="MergedData",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("po_id", models.CharField(db_index=True, max_length=200)),
                ("po_number", models.CharField(db_index=True, max_length=100)),
                ("po_line_no", models.CharField(max_length=50)),
                (
                    "project_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "project_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "account_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("site_name", models.CharField(blank=True, max_length=255, null=True)),
                ("site_code", models.CharField(blank=True, max_length=100, null=True)),
                ("item_code", models.CharField(blank=True, max_length=100, null=True)),
                ("item_description", models.TextField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                (
                    "requested_qty",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "line_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("unit", models.CharField(blank=True, max_length=50, null=True)),
                ("currency", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "payment_terms",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("publish_date", models.DateField(blank=True, null=True)),
                ("ac_date", models.DateField(blank=True, null=True)),
                ("pac_date", models.DateField(blank=True, null=True)),
                (
                    "ac_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "pac_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "remaining",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("po_status", models.CharField(blank=True, max_length=50, null=True)),
                ("is_assigned", models.BooleanField(db_index=True, default=False)),
                ("has_external_po", models.BooleanField(db_index=True, default=False)),
                ("external_po_id", models.UUIDField(blank=True, null=True)),
                ("batch_id", models.UUIDField(db_index=True)),
                ("merged_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "merged_data",
            },
        ),
        migrations.CreateModel(
            name="AcceptanceStaging",
            fields=[
                ("staging_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("batch_id", models.UUIDField(db_index=True)),
                ("row_number", models.IntegerField(blank=True, null=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("is_valid", models.BooleanField(default=True)),
                ("validation_errors", models.JSONField(blank=True, null=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("acceptance_no", models.CharField(max_length=100)),
                ("po_number", models.CharField(max_length=100)),
                ("po_line_no", models.CharField(max_length=50)),
                (
                    "shipment_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("rejected_reason", models.TextField(blank=True, null=True)),
                ("item_description", models.TextField(blank=True, null=True)),
                ("item_description_local", models.TextField(blank=True, null=True)),
                (
                    "project_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "project_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("site_code", models.CharField(blank=True, max_length=100, null=True)),
                ("site_name", models.CharField(blank=True, max_length=255, null=True)),
                ("site_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "engineering_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("business_type", models.TextField(blank=True, null=True)),
                ("product_category", models.TextField(blank=True, null=True)),
                ("requested_qty", models.IntegerField(blank=True, null=True)),
                ("acceptance_qty", models.IntegerField(blank=True, null=True)),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True
                    ),
                ),
                (
                    "milestone_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "acceptance_milestone",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("cancel_remaining_qty", models.TextField(blank=True, null=True)),
                (
                    "bidding_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("customer", models.TextField(blank=True, null=True)),
                ("rep_office", models.CharField(blank=True, max_length=255, null=True)),
                ("unit", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "subproject_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "engineering_category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "center_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("planned_completion_date", models.DateField(blank=True, null=True)),
                ("actual_completion_date", models.DateField(blank=True, null=True)),
                ("approver", models.CharField(blank=True, max_length=255, null=True)),
                ("current_handler", models.TextField(blank=True, null=True)),
                (
                    "approval_progress",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "isdp_project",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("application_submitted", models.DateField(blank=True, null=True)),
                ("application_processed", models.DateField(blank=True, null=True)),
                ("header_remarks", models.TextField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "service_code",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True
                    ),
                ),
                (
                    "payment_percentage",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "record_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "acceptance_staging",
                "indexes": [
                    models.Index(fields=["batch_id"], name="idx_acc_staging_batch"),
                    models.Index(
                        fields=["po_number", "po_line_no"],
                        name="idx_acc_staging_lookup",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Acceptance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("batch_id", models.UUIDField(db_index=True)),
                ("acceptance_no", models.CharField(max_length=100)),
                ("po_number", models.CharField(max_length=100)),
                ("po_line_no", models.CharField(max_length=50)),
                ("shipment_no", models.CharField(max_length=100)),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("rejected_reason", models.TextField(blank=True, null=True)),
                ("item_description", models.TextField(blank=True, null=True)),
                ("item_description_local", models.TextField(blank=True, null=True)),
                (
                    "project_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "project_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("site_code", models.CharField(blank=True, max_length=100, null=True)),
                ("site_name", models.CharField(blank=True, max_length=255, null=True)),
                ("site_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "engineering_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("business_type", models.TextField(blank=True, null=True)),
                ("product_category", models.TextField(blank=True, null=True)),
                ("requested_qty", models.IntegerField(blank=True, null=True)),
                ("acceptance_qty", models.IntegerField(blank=True, null=True)),
                (
                    "unit_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True
                    ),
                ),
                (
                    "milestone_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "acceptance_milestone",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("cancel_remaining_qty", models.TextField(blank=True, null=True)),
                (
                    "bidding_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("customer", models.TextField(blank=True, null=True)),
                ("rep_office", models.CharField(blank=True, max_length=255, null=True)),
                ("unit", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "subproject_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "engineering_category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "center_area",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("planned_completion_date", models.DateField(blank=True, null=True)),
                ("actual_completion_date", models.DateField(blank=True, null=True)),
                ("approver", models.CharField(blank=True, max_length=255, null=True)),
                ("current_handler", models.TextField(blank=True, null=True)),
                (
                    "approval_progress",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "isdp_project",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("application_submitted", models.DateField(blank=True, null=True)),
                ("application_processed", models.DateField(blank=True, null=True)),
                ("header_remarks", models.TextField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "service_code",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=15, null=True
                    ),
                ),
                (
                    "payment_percentage",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("record_status", models.CharField(default="active", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "acceptances",
                "indexes": [
                    models.Index(fields=["batch_id"], name="idx_acc_batch"),
                    models.Index(
                        fields=["po_number", "po_line_no"], name="idx_acc_po_lookup"
                    ),
                    models.Index(
                        fields=[
                            "acceptance_no",
                            "po_number",
                            "po_line_no",
                            "shipment_no",
                        ],
                        name="idx_acc_lookup",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="uploadhistory",
            index=models.Index(
                fields=["user", "file_type"], name="idx_upload_user_type"
            ),
        ),
        migrations.AddIndex(
            model_name="mergeddata",
            index=models.Index(
                fields=["po_number", "po_line_no"], name="idx_merged_po"
            ),
        ),
        migrations.AddIndex(
            model_name="mergeddata",
            index=models.Index(fields=["is_assigned"], name="idx_merged_assigned"),
        ),
        migrations.AddIndex(
            model_name="mergeddata",
            index=models.Index(fields=["has_external_po"], name="idx_merged_external"),
        ),
        migrations.AddIndex(
            model_name="mergeddata",
            index=models.Index(fields=["batch_id"], name="idx_merged_batch"),
        ),
        migrations.AddIndex(
            model_name="mergeddata",
            index=models.Index(fields=["status"], name="idx_merged_status"),
        ),
    ]
