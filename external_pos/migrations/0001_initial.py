# Generated by Django 4.2.7 on 2025-10-22 10:23

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ExternalPO",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "internal_po_id",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                (
                    "po_numbers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        help_text="Array of unique PO numbers",
                        size=None,
                    ),
                ),
                (
                    "po_lines_data",
                    models.JSONField(
                        help_text="Array of objects with po_id, po_number, po_line"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PENDING_PD_APPROVAL", "Pending PD Approval"),
                            ("PENDING_ADMIN_APPROVAL", "Pending Admin Approval"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        db_index=True,
                        default="DRAFT",
                        max_length=50,
                    ),
                ),
                (
                    "assignment_notes",
                    models.TextField(
                        blank=True,
                        help_text="Notes for SBC (visible to SBC)",
                        null=True,
                    ),
                ),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes (NOT visible to SBC)",
                        null=True,
                    ),
                ),
                (
                    "estimated_total_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("pd_approved_at", models.DateTimeField(blank=True, null=True)),
                ("pd_remarks", models.TextField(blank=True, null=True)),
                ("admin_approved_at", models.DateTimeField(blank=True, null=True)),
                ("admin_remarks", models.TextField(blank=True, null=True)),
                ("rejected_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True, null=True)),
                (
                    "sbc_response_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=50,
                    ),
                ),
                ("sbc_accepted_at", models.DateTimeField(blank=True, null=True)),
                ("sbc_rejection_reason", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "admin_approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="admin_approved_external_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to_sbc",
                    models.ForeignKey(
                        limit_choices_to={"role": "SBC"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assigned_external_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_external_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pd_approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pd_approved_external_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "rejected_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rejected_external_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "external_pos",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["status"], name="idx_external_po_status"),
                    models.Index(
                        fields=["assigned_to_sbc", "status"], name="idx_external_po_sbc"
                    ),
                ],
            },
        ),
    ]
